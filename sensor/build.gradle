plugins {
	id 'org.springframework.boot' version '2.6.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id("com.palantir.docker") version "0.22.1"
}

group = 'com.tfm.microservices'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', '2021.0.0')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
	implementation group: 'org.osgeo', name: 'proj4j', version: '0.1.0'
	implementation 'com.opencsv:opencsv:5.5.2'
	implementation('org.postgresql:postgresql')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	compileOnly 'com.github.ukman:kolobok:0.1.5'
	implementation("org.springframework.boot:spring-boot-starter-actuator")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

docker {
	name = "sensor:".plus(version)
	tag("name", "sensor")
	copySpec.from("build").into("build")
	setDockerfile(file("Dockerfile"))
}

test {
	useJUnitPlatform()
}
